networks:
  edge:
  apps:

volumes:
  portainer_data:
  traefik_data:

services:
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
    environment:
      OAUTH2_PROXY_PROVIDER: github
      OAUTH2_PROXY_CLIENT_ID: ${GITHUB_CLIENT_ID_PROD}
      OAUTH2_PROXY_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET_PROD}
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_COOKIE_SECRET_PROD}   # 32-byte base64
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'                            # or restrict (see below)
      # Restrict by org/team (optional):
      # OAUTH2_PROXY_GITHUB_ORG: your-org
      # OAUTH2_PROXY_GITHUB_TEAM: your-org:platform
      OAUTH2_PROXY_UPSTREAMS: file:///dev/null
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      OAUTH2_PROXY_REDIRECT_URL: https://${OAUTH_URL}/oauth2/callback
      OAUTH2_PROXY_COOKIE_SECURE: "true"
      OAUTH2_PROXY_REVERSE_PROXY: "true"
      OAUTH2_PROXY_COOKIE_NAME: _oauth2_proxy_prod
      OAUTH2_PROXY_WHITELIST_DOMAINS: ${OAUTH_WHITELIST_DOMAIN}
      OAUTH2_PROXY_COOKIE_DOMAINS: ${OAUTH_WHITELIST_DOMAIN}
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"   # optional
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "false"
      OAUTH2_PROXY_SHOW_DEBUG_ON_ERROR: "true"
      LOG_LEVEL: "debug"
    networks: [apps]
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - "traefik.http.routers.oauth2-proxy.rule=Host(`${OAUTH_URL}`)"
      - "traefik.http.routers.oauth2-proxy.entrypoints=web"
      - "traefik.http.services.oauth2-proxy.loadbalancer.server.port=4180"
        
  traefik:
    image: traefik:v3.1
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.dashboard.address=:8081
      - --serverstransport.insecureskipverify=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --accesslog=true
      - --log.level=INFO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOSTNAME}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure,dashboard"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.middlewares.oauth2auth.forwardauth.address=http://oauth2-proxy:4180/oauth2/auth"
      - "traefik.http.middlewares.oauth2auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth2auth.forwardauth.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization"
      - "traefik.http.middlewares.forwarded-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.forwarded-headers.headers.customrequestheaders.X-Forwarded-Host={host}"
      - "traefik.http.middlewares.forwarded-headers.headers.customrequestheaders.X-Forwarded-Port=443"
      - "traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secure-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.secure-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.secure-headers.headers.frameDeny=true"
  - "traefik.http.middlewares.auth-errors.errors.status=401-403"
  - "traefik.http.middlewares.auth-errors.errors.query=https://${OAUTH_URL}/oauth2/start?rd={url}"
      - "traefik.http.routers.dashboard.middlewares=forwarded-headers,oauth2auth,auth-errors,secure-headers"
     
    ports:
      - "8081:8081"
    volumes:
      - ${DOCKER_SOCKET_PATH:-/run/podman/podman.sock}:/var/run/docker.sock:ro,Z
      - traefik_data:/etc/traefik
    networks: [edge, apps]
    restart: unless-stopped

  # portainer:
  #   image: portainer/portainer-ce:latest
  #   command: -H unix:///var/run/docker.sock
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOSTNAME}`)"
  #     - "traefik.http.routers.portainer.entrypoints=web"
  #     - "traefik.http.services.portainer.loadbalancer.server.port=9000"
  #     - traefik.http.routers.portainer.middlewares=forwarded-headers,oauth2auth,auth-errors,secure-headers
     
  #   networks: [apps]
  #   environment:
  #     - TRUSTED_ORIGINS=${PORTAINER_HOSTNAME}
  #     - EDGE=1
  #   restart: unless-stopped

  repository:
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      # Oauth connector
      - "traefik.http.routers.nexus.rule=Host(`${PORTAINER_HOSTNAME}`)"
      - "traefik.http.routers.nexus.entrypoints=web"
      - "traefik.http.routers.nexus.tls=false"
      - "traefik.http.routers.nexus.service=nexus"
      - "traefik.http.routers.nexus.priority=10"
      - "traefik.http.services.nexus.loadbalancer.server.port=80"
      - "traefik.http.routers.nexus.middlewares=nexus-forward-auth"
      - "traefik.http.middlewares.nexus-forward-auth.forwardauth.address=http://oauth2-proxy:4180/oauth2/auth"
      - "traefik.http.middlewares.nexus-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User,X-Forwarded-Email,X-Forwarded-Preferred-Username,X-Forwarded-Groups,X-Auth-Request-Access-Token,Authorization"
      - "traefik.http.middlewares.nexus-forward-auth.forwardauth.trustForwardHeader=true"

    networks: [apps]
  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    restart: unless-stopped
    networks: [edge]

  debug:
    image: ubuntu:22.04
    command: sleep infinity
    tty: true
    stdin_open: true
    networks:
      - edge
      - apps
